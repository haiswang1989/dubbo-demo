<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
       
    <!-- 配置应用信息,不管是服务的提供者还是消费者 -->       
    <dubbo:application name="demo-provider"/>
    
    
    <!-- 用于配置连接注册中心相关信息
    <dubbo:registry address="multicast://224.5.6.7:1234"/>
    multicast:
    zookeeper:
    redis:
    simple:
     -->
    <dubbo:registry address="zookeeper://192.168.56.101:2181"/>
     
    <!-- 用于配置提供服务的协议信息,协议由提供方指定,消费方被动接受 
    https://blog.csdn.net/fuyuwei2015/article/details/72848310
    dubbo:
            基于mina1.1.7+hessian3.2.1的TBRemoting交互
            连接个数:单连接
            连接方式:长连接
            传输协议:TCP
            传输方式:NIO异步传输
            适用范围:传入传出参数数据包较小(建议小于100KB),消费者比服务提供者多,单一服务无法压满提供者,
                             尽量不要用dubbo传输大文件或超大字符串
            适用场景:常规远程服务方法调用
            
    rmi:
            连接个数:多连接
            连接方式:短连接
            传输协议:TCP
            传输方式:同步传输
            序列化:Java标准的序列化
            适用范围:传入和传出参数数据包大小混合,消费者和提供者个数差不多,可传文件
            适用场景:常规远程服务方法调用,与原生RMI服务互操作
            
    hessian:
            连接个数:多连接
            连接方式:短连接
            传输协议:HTTP
            传输方式:同步传输
            序列化:表单序列化
            适用范围:传入传出参数数据包大小混合,提供者比消费者个数多,可用浏览器查看,
                             可用表单或URL传入传输,暂不支持文件
            适用场景:需要同时给应用程序和浏览器JS使用的服务
    
    http:
        
    webservice:
    thrift:
    redis:
    -->
    <dubbo:protocol name="dubbo" port="8888"/>
    
    <!-- 用于暴露一个服务,定义服务的元数据,一个服务可以用多个协议暴露,一个服务也可以注册到多个注册中心 -->
    <!-- 
        集群的容错模式：
    1:自动切换重试
    cluster="failover" retries="2"
    2:快速失败
    cluster="failfast" 或者 cluster="failover" retries="0"
    3:失败安全
    cluster="failfast" retries="0"
     -->
    <dubbo:service interface="com.whs.rpc.dubbo.demo.service.intf.IHelloWorldService" ref="helloworldService" cluster="failover" retries="2"/>
    
    <!-- 服务的实现类 -->
    <bean id="helloworldService" class="com.whs.rpc.dubbo.demo.service.impl.HelloWorldServiceImpl"/>
</beans>